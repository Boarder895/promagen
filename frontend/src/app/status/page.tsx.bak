"use client";
import React from "react";

type ProviderStatus = { id: string; name: string; ok: boolean; message?: string };

export default function StatusPage() {
  const [error, setError] = React.useState<string | null>(null);
  const [loading, setLoading] = React.useState(true);
  const [data, setData] = React.useState<ProviderStatus[] | null>(null);

  React.useEffect(() => {
    let cancelled = false;
    (async () => {
      try {
        setLoading(true);
        setError(null);
        const base = process.env.NEXT_PUBLIC_API_BASE_URL ?? "";
        const res = await fetch(`${base}/api/v1/providers/status`, { cache: "no-store" });
        if (!res.ok) throw new Error(`HTTP ${res.status}`);
        const json = (await res.json()) as ProviderStatus[];
        if (!cancelled) setData(json);
      } catch (e: unknown) {
        const msg = typeof e === "string" ? e : (e as Error)?.message ?? "Failed to load status";
        if (!cancelled) setError(msg);
      } finally {
        if (!cancelled) setLoading(false);
      }
    })();
    return () => { cancelled = true; };
  }, []);

  if (loading) return <div className="p-6">Loading…</div>;
  if (error) return <div className="p-6 text-red-600">Error: {error}</div>;

  return (
    <div className="p-6 space-y-4">
      <h1 className="text-2xl font-semibold">Provider Status</h1>
      {data?.length ? (
        <ul className="space-y-2">
          {data.map((p) => (
            <li key={p.id} className="rounded-xl border p-3">
              <div className="flex items-center justify-between">
                <span className="font-medium">{p.name}</span>
                <span className={p.ok ? "text-green-600" : "text-amber-600"}>
                  {p.ok ? "OK" : "Issues"}
                </span>
              </div>
              {p.message ? <p className="text-sm text-gray-500">{p.message}</p> : null}
            </li>
          ))}
        </ul>
      ) : (
        <p>No data.</p>
      )}
    </div>
  );
}
