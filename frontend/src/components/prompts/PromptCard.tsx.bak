"use client";
import React from "react";

type PromptItem = {
  id: string;
  title?: string;
  prompt?: string;
  likes?: number | null;
};

type PromptCardProps = {
  item: PromptItem;
  initialLikes?: number | null;
  onLike?: (id: string, liked: boolean, likes: number) => void;
  onOpen?: (item: PromptItem) => void;
};

export default function PromptCard({ item, initialLikes = null, onLike, onOpen }: PromptCardProps) {
  const safeInitial =
    Number.isFinite(initialLikes as number)
      ? Number(initialLikes as number)
      : Number.isFinite(item.likes as number)
      ? Number(item.likes)
      : 0;

  const [liked, setLiked] = React.useState<boolean>(false);
  const [likes, setLikes] = React.useState<number>(safeInitial);

  const handleToggleLike = React.useCallback(() => {
    setLiked((prevLiked) => {
      const nextLiked = !prevLiked;
      setLikes((prevLikes) => {
        const base = typeof prevLikes === "number" && Number.isFinite(prevLikes) ? prevLikes : 0;
        const result = nextLiked ? base + 1 : Math.max(0, base - 1);
        return result;
      });
      try {
        onLike?.(item.id, nextLiked, typeof likes === "number" ? likes : 0);
      } catch {
        // ignore parent callback errors — UI is optimistic
      }
      return nextLiked;
    });
  }, [item.id, onLike, likes]);

  const handleOpen = React.useCallback(() => {
    onOpen?.(item);
  }, [item, onOpen]);

  return (
    <li className="rounded-xl border p-3">
      <div className="flex items-start justify-between gap-3">
        <div className="min-w-0">
          <div className="font-medium truncate">{item.title ?? "Untitled prompt"}</div>
          <pre className="mt-2 max-h-36 overflow-auto whitespace-pre-wrap break-words text-xs text-gray-700">
            {item.prompt ?? "(no prompt)"}
          </pre>
        </div>

        <div className="flex flex-col items-end gap-2">
          <div className="flex flex-col gap-2">
            <button
              type="button"
              onClick={handleToggleLike}
              aria-pressed={liked}
              className={`shrink-0 rounded-full border px-3 py-1 text-sm ${liked ? "bg-black text-white" : ""}`}
              title={liked ? "Unlike" : "Like"}
            >
              ❤️ {likes}
            </button>

            <button
              type="button"
              onClick={handleOpen}
              className="shrink-0 rounded-md border px-3 py-1 text-xs text-gray-700"
              title="Open"
            >
              Open
            </button>
          </div>

          <div className="text-xs text-gray-500">{item.id}</div>
        </div>
      </div>
    </li>
  );
}
