"use client";

import { useEffect } from "react";
import type { Prompt } from "@/data/prompts";
import { getAffiliateUrl } from "@/lib/affiliates";
import { postRemix } from '@/lib/api';

export default function PromptDrawer({
  prompt,
  onClose
}: {
  prompt: Prompt | null;
  onClose: () => void;
}) {
  useEffect(() => {
    const onEsc = (e: KeyboardEvent) => e.key === "Escape" && onClose();
    window.addEventListener("keydown", onEsc);
    return () => window.removeEventListener("keydown", onEsc);
  }, [onClose]);

  if (!prompt) return null;

  const runAcrossProviders = async () => {
    try {
      // bump counters server-side (non-blocking)
      postRemix(prompt.id).catch(() => {});
    } finally {
      // open provider affiliate in new tab
      const url = getAffiliateUrl(prompt);
      window.open(url, "_blank", "noopener,noreferrer");
    }
  };

  return (
    <div className="fixed inset-0 z-50 flex items-end justify-center bg-black/40 p-4 sm:items-center">
      <div className="w-full max-w-2xl rounded-2xl bg-white p-4 shadow-xl">
        <div className="flex items-start justify-between gap-3">
          <h3 className="text-base font-semibold">{prompt.title}</h3>
          <button
            className="rounded-md border px-2 py-1 text-xs hover:bg-gray-50"
            onClick={onClose}
          >
            Close
          </button>
        </div>

        <p className="mt-2 whitespace-pre-wrap text-sm text-gray-700">{prompt.body}</p>

        <div className="mt-4 flex flex-wrap gap-1">
          {prompt.tags.map((t) => (
            <span key={t} className="rounded-full bg-gray-50 px-2 py-0.5 text-[10px] ring-1 ring-gray-200">
              #{t}
            </span>
          ))}
        </div>

        <div className="mt-6 flex items-center justify-between text-xs text-gray-500">
          <span>Provider: {prompt.provider}</span>
          <button
            onClick={runAcrossProviders}
            className="rounded-md bg-black px-3 py-1.5 text-white hover:bg-gray-800"
          >
            Run across providers
          </button>
        </div>
      </div>
    </div>
  );
}

