"use client";
import React from "react";
import PromptCard from "./PromptCard";

/**
 * Defensive PromptGrid: 'items' is optional now and defaults to [].
 * Accepts initialId and opens the item when items become available.
 */
type PromptItem = {
  id: string;
  title?: string;
  prompt?: string;
  likes?: number | null;
  tags?: string[];
};

type Prompt = {
  id: string;
  title: string;
  prompt: string;
  tags?: string[];
  createdAt?: string;
  likes?: number;
};

type Props = {
  items?: PromptItem[]; // made optional
  onOpen?: (p: Prompt | null) => void;
  initialId?: string;
};

export default function PromptGrid({ items = [], onOpen, initialId }: Props) {
  const [open, setOpen] = React.useState<Prompt | null>(null);

  const handleOpen = React.useCallback(
    (item: PromptItem) => {
      const normalized: Prompt = {
        id: item.id,
        title: item.title ?? "Untitled",
        prompt: item.prompt ?? "",
        likes: typeof item.likes === "number" ? item.likes : 0,
        tags: item.tags ?? [],
      };
      setOpen(normalized);
      onOpen?.(normalized);
    },
    [onOpen]
  );

  // If initialId provided, open matching item once items are present
  React.useEffect(() => {
    if (!initialId || items.length === 0) return;
    const found = items.find((i) => i.id === initialId);
    if (found) handleOpen(found);
  }, [initialId, items, handleOpen]);

  return (
    <div>
      <ul className="grid gap-4 sm:grid-cols-2 lg:grid-cols-3">
        {items.map((p) => (
          <PromptCard key={p.id} item={p} onOpen={handleOpen} />
        ))}
      </ul>

      {open ? (
        <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/50 p-4">
          <div className="max-w-2xl rounded-lg bg-white p-6">
            <div className="flex justify-between items-start">
              <h3 className="text-lg font-semibold">{open.title}</h3>
              <button
                aria-label="Close"
                onClick={() => {
                  setOpen(null);
                  onOpen?.(null);
                }}
                className="text-sm text-gray-600"
              >
                Close
              </button>
            </div>
            <pre className="mt-3 whitespace-pre-wrap text-sm text-gray-800">{open.prompt}</pre>
            {open.tags?.length ? (
              <div className="mt-3 flex flex-wrap gap-2">
                {open.tags.map((t) => (
                  <span key={t} className="rounded-full border px-2 py-0.5 text-xs text-gray-600">
                    {t}
                  </span>
                ))}
              </div>
            ) : null}
          </div>
        </div>
      ) : null}
    </div>
  );
}
