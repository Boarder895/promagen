// BACKEND Â· Prisma schema (REPLACE)
// Normalized scoring for providers with 7 criteria.
// Local dev can use SQLite (PRISMA_PROVIDER=sqlite, DATABASE_URL="file:./dev.db").
// Prod on Fly should use Postgres (PRISMA_PROVIDER=postgresql, DATABASE_URL set via secret).

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"       // for local dev
  url      = env("DATABASE_URL")
}

model Provider {
  id           String         @id @default(cuid())
  slug         String         @unique          // canonical id, e.g. "adobe", "i23rf"
  displayName  String
  hasApi       Boolean        @default(false)
  hasAffiliate Boolean        @default(false)
  isActive     Boolean        @default(true)

  scores       ProviderScore[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model Criterion {
  id        String         @id @default(cuid())
  key       String         @unique // adoption|quality|speed|cost|trust|automation|ethics
  name      String
  weight    Int
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt

  scores    ProviderScore[]
}

model ProviderScore {
  id          String    @id @default(cuid())
  providerId  String
  criterionId String
  raw         Int       // 0..100 (weighted at read: raw * (weight/100))

  provider   Provider  @relation(fields: [providerId], references: [id], onDelete: Cascade)
  criterion  Criterion @relation(fields: [criterionId], references: [id], onDelete: Cascade)

  @@unique([providerId, criterionId])
}
